شرح المشروع كامل بطريقة مبسطة، غادي نقسم الشرح على شكل نقاط باش يكون سهل الفهم:

---

## 1. **شنو الهدف من هاد المشروع؟**

المشروع هو **نظام مراسلة مشفر** (messagerie chiffrée) يعني تقدر تبعث وتستقبل رسائل بين جوج ديال الناس، وكلشي مشفر (حتى واحد ما يقدر يقرا الرسائل إلا اللي عندو المفتاح).

---

## 2. **كيفاش كيخدم البرنامج؟**

- كين مفتاح سري (clé secrète) كيتخلق أوتوماتيكياً وكيبقى مخزن فواحد الملف.
- أي رسالة كتبغي تبعثها، كتتشفر بهاد المفتاح وكتتخزن مشفرة.
- ملي كتبغي تقرا رسالة، البرنامج كيدير déchiffrement (يفك التشفير) بنفس المفتاح وكيوريك الرسالة الأصلية.
- تقدر تستعمل البرنامج إما من **الترمنال** (CLI) أو من **واجهة رسومية** (GUI).

---

## 3. **شنو الدور ديال كل ملف؟**

### 1. `key_manager.py`
- **الدور:** مسؤول على خلق وتحميل المفتاح السري (clé AES).
- **شنو فيه؟**
  - `generate_key()`: كيشوف واش المفتاح كاين، إلا ماكانش كينشئ واحد جديد وكيخزنو.
  - `load_key()`: كيقرا المفتاح من الملف ويعطيه للبرنامج.
- **العلاقة:** كلشي الملفات الأخرى كيعولو عليه باش ياخدو المفتاح.

---

### 2. `crypto_utils.py`
- **الدور:** فيه الدوال اللي كيديرو التشفير وفك التشفير باستعمال المفتاح.
- **شنو فيه؟**
  - `encrypt_message(key, plaintext)`: كياخد نص عادي وكيدير عليه التشفير وكيعطيك (النص المشفر، nonce، tag).
  - `decrypt_message(key, ciphertext, nonce, tag)`: كياخد النص المشفر ويفك التشفير ويرجع النص الأصلي.
- **العلاقة:** كلشي اللي باغي يشفر أو يفك التشفير كينادي على هاد الدوال.

---

### 3. `main.py`
- **الدور:** هادي هي الواجهة ديال الترمنال (CLI).
- **شنو فيها؟**
  - كتوريك menu فيه اختيارات (خلق المفتاح، تشفير رسالة، فك تشفير رسالة، الخروج).
  - إلا بغيتي تشفر رسالة: كتسولك على النص، كتشفره وكتخزن النتيجة فـ `messages/sent.txt`.
  - إلا بغيتي تفك تشفير: كيقرا آخر رسالة مشفرة، كيرجعها نص عادي وكيخزنها فـ `messages/received.txt`.
- **العلاقة:** كيتعامل مع `key_manager.py` و `crypto_utils.py`، وكيخزن الرسائل فـ ملفات.

---

### 4. `gui.py`
- **الدور:** هادي هي الواجهة الرسومية (GUI) باستعمال Tkinter.
- **شنو فيها؟**
  - فيها champ باش تكتب الرسالة، وزرين: واحد باش تشفر وتبعت، واحد باش تفك تشفير آخر رسالة.
  - كيبان ليك آخر رسالة مستلمة، وكاين سجل ديال جميع الرسائل اللي تفكو التشفير ديالهم.
- **العلاقة:** حتى هي كتعتمد على `key_manager.py` و `crypto_utils.py`، وكتخزن وتقرا من نفس الملفات ديال الرسائل.

---

### 5. `tests/test_crypto.py`
- **الدور:** فيه اختبارات أوتوماتيكية باش نتأكدو أن التشفير وفك التشفير خدامين مزيان.
- **شنو فيه؟**
  - اختبار واش المفتاح كيتخلق مزيان.
  - اختبار واش إلا شفرت رسالة وفكيت التشفير ديالها كتلقاها بحال الأصل.
- **العلاقة:** كيتستعمل غير فمرحلة التطوير باش نتاكدو أن كلشي خدام.

---

### 6. `README.md`
- **الدور:** فيه شرح المشروع، كيفاش تثبتو، كيفاش تستعملو، شنو فيه من ملفات، وأمثلة.
- **العلاقة:** هو الدليل ديالك لأي واحد باغي يفهم أو يستعمل المشروع.

---

### 7. `messages/sent.txt` و `messages/received.txt`
- **الدور:** ملفات كيخزنو الرسائل المشفرة والرسائل اللي تفك التشفير ديالها.
- **العلاقة:** كل من CLI وGUI كيتعاملو معاهم.

---

### 8. `secret.key`
- **الدور:** فيه المفتاح السري اللي كيتستعمل فالتشفير وفك التشفير.
- **العلاقة:** كيتخلق أوتوماتيكياً وماخصوش يتحيد إلا إلا كنتي كتجرب أو كتدير اختبارات.

---

## 4. **كيفاش كيتواصلو هاد الملفات؟**

- **main.py** و **gui.py** بجوجهم كيناديو على `generate_key()` و `encrypt_message()` و `decrypt_message()`.
- كلشي كيعتمد على وجود المفتاح فـ `secret.key`.
- الرسائل المشفرة كيتخزنو فـ `messages/sent.txt`، والرسائل المفكوكة كيتخزنو فـ `messages/received.txt`.
- الاختبارات كيتأكدو أن كلشي خدام بلا مشاكل.

---

## 5. **شنو كيدير البرنامج من الأول حتى الآخر؟**

1. أول مرة كتشغل البرنامج، كيتخلق المفتاح السري إلا ماكانش.
2. تقدر تشفر رسالة (من CLI أو GUI)، كيتخزن النص المشفر فـ `sent.txt`.
3. تقدر تفك تشفير آخر رسالة مشفرة، كيرجع ليك النص الأصلي وكيخزنو فـ `received.txt`.
4. تقدر تشوف سجل الرسائل اللي تفك التشفير ديالهم.
5. كلشي آمن، حيث حتى واحد ما يقدر يقرا الرسائل بلا المفتاح.